/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define L1 1
#define L2 2
#define L3 3  // NUMBERs, F1-12..
#define L4 4  // SPECIAL
#define L5 5  // NUMPAD
#define L6 6  // BL

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp ESC   &kp APOS  &kp O     &kp E    &kp P      &kp Y                             &kp F     &kp G   &kp T  &kp N    &kp L              &kp MINUS
    &kp TAB   &kp A     &kp COMMA &kp DOT  &kp U      &kp I                             &kp D     &kp H   &kp C  &kp R    &kp S              &kp MINUS
    &kp LSHFT &kp LBKT  &kp Q     &kp J    &kp K      &kp X                             &kp B     &kp M   &kp W  &kp V    &kp Z              &kp BSLH
    &kp LSHFT &kp SEMI  &none     &kp LGUI &mo L1     &kp BSPC  &kp DEL      &kp ENTER  &kp SPACE &mo L1  &none  &kp RALT &kp LC(LA(LS(Q)))  &kp RSHFT
            >;
        };

        fst_layer {
          bindings = <
    &kp TAB    &kp ESC        &none          &kp ENTER  &none      &kp INS                       &none     &none     &kp RA(N7)  &kp RA(N0)  &kp C_PLAY_PAUSE  &kp C_NEXT
    &kp LCTRL  &none          &kp INS        &kp LC(S)  &kp HOME   &kp END                       &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT   &kp LS(N8)        &kp LS(N9)
    &kp LSHFT  &kp LC(Y)      &kp LC(X)      &kp LC(C)  &kp LC(V)  &tog L4                       &kp DEL   &kp BSPC  &kp RA(N8)  &kp RA(N9)  &kp RS(BSLH)      &kp C_PREV
    &kp LSHFT  &kp LC(PG_UP)  &kp LC(PG_DN)  &kp LGUI   &none      &none    &none      &kp LALT  &none     &mo L2    &mo L3      &none       &none             &kp RSHFT
          >;
        };
        
        snd_layer {
          bindings = <
    &none      &none          &kp RA(MINUS)    &kp LS(N0)           &kp LS(N6)  &kp RA(RBKT)                            &none     &kp LS(F3)  &kp RS(RBKT)  &kp F3       &kp RBKT         &none
    &kp LCTRL  &kp RA(Q)      &kp NON_US_BSLH  &kp LS(NON_US_BSLH)  &kp SLASH   &kp RA(NON_US_BSLH)                     &kp HOME  &kp PG_DN   &kp PG_UP     &kp END      &none            &none
    &kp LSHFT  &kp K_APP      &kp LA(F4)       &kp LS(N7)           &kp LS(N5)  &kp LS(N1)                              &none     &none       &none         &kp LS(F10)  &kp LC(F2)       &none
    &kp LSHFT  &kp LC(PG_UP)  &kp LC(PG_DN)    &kp LGUI             &kp CAPS    &mo L3               &none       &none  &none     &none       &none         &none        &kp LC(LA(DEL))  &kp RSHFT
          >;
        };

        trd_layer {
          bindings = <
    &kp GRAVE      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                           &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp EQUAL
    &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                       &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp LS(EQUAL)
    &kp LSHFT      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                           &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11
    &kp LSHFT      &kp F12     &none       &kp LGUI    &kp RALT    &kp LCTRL   &kp LALT      &none  &none       &none       &none       &none       &none       &kp RSHFT
          >;
        }; 
    };
};
