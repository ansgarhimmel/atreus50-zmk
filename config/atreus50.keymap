/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define L1 1
#define L2 2
#define L3 3  // NUMBERs, F1-12..
#define L4 4  // SPECIAL
#define L5 5  // NUMPAD
#define L6 6  // BL

#define AUML APOS
#define OUML SEMI
#define UUML LBKT
#define DE_SS MINUS
#define DE_MINS SLASH
#define DE_DLLR LS(N4)
#define DE_PCNT LS(N5)
#define DE_AMPSD LS(N6)
#define DE_FSLH LS(N7)
#define DE_PLUS LS(RBRC)
#define DE_STAR RBRC
#define DE_EQUL LS(N0)
#define DE_AT RA(Q)
#define DE_HASH BSLH
#define DE_LT NON_US_BSLH
#define DE_GT LS(NON_US_BSLH)
#define DE_PIPE RA(NON_US_BSLH)
#define DE_BSLH RA(MINUS)

&lt {
        tapping-term-ms = <250>;
        quick_tap_ms = <400>;
        retro-tap;
        flavor = "tap-preferred";
    };

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp ESC   &kp UUML   &hm LALT O &hm LSHFT E    &kp P      &kp Z                                 &kp F        &kp G      &hm RSHFT T &hm RALT N &kp L      &none
    &kp TAB   &hm LGUI A &kp COMMA  &kp DOT        &hm LCTL U &kp I                                 &kp D        &hm RCTL H &kp C       &kp R      &hm RGUI S &kp DE_MINS
    &kp LSHFT &kp OUML   &kp Q      &kp J          &kp K      &kp X                                 &kp B        &kp M      &kp W       &kp V      &kp Y      &kp RSHFT
    &kp LCTL  &kp AUML   &none      &lt L4 DE_HASH &mo L3     &lt L1 BSPC  &lt L2 DEL &lt L2 ENTER  &lt L1 SPACE &mo L3     &mo L4      &none      &kp DE_SS  &kp RCTL
            >;
        };

        first_layer {
          bindings = <
    &trans     &kp DE_DLLR    &kp DE_PIPE    &kp DE_BSLH &kp RA(N7) &kp RA(N0)                    &kp DE_PLUS &kp N7     &kp N8     &kp N9     &kp C_PLAY_PAUSE  &kp C_NEXT
    &trans     &kp DE_AT      &kp DE_AMPSD   &kp DE_FSLH &kp LS(N8) &kp LS(N9)                    &kp DE_EQUL &kp N4     &kp N5     &kp N6     &none             &none
    &trans     &kp DE_PCNT    &kp DE_LT      &kp DE_GT   &kp RA(N8) &kp RA(N9)                    &kp DE_STAR &kp N1     &kp N2     &kp N3     &kp RS(BSLH)      &trans
    &trans     &none          &trans         &none       &none      &trans    &trans     &trans   &trans      &kp NUM_0  &mo L3     &kp KP_DOT &none             &trans
          >;
        };
/*
  [_NAV] = LAYOUT(
       XXXXXXX ,XXXXXXX ,KC_F1   ,KC_F2   ,KC_F3   ,KC_F4   ,_______ ,                          _______ ,KC_HOME ,KC_PGUP ,KC_UP   ,KC_PGDN ,KC_END  ,XXXXXXX ,
     XXXXXXX ,KC_MS_L ,KC_F5   ,KC_F6   ,KC_F7   ,KC_F8   ,_______ ,                          _______ ,XXXXXXX ,KC_LEFT ,KC_DOWN ,KC_RIGHT,XXXXXXX ,XXXXXXX ,
     XXXXXXX ,XXXXXXX ,KC_F9   ,KC_F10  ,KC_F11  ,KC_F12  ,_______ ,_______ ,        _______ ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,
     XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,     KC_BTN1 ,    KC_BTN2 ,_______ ,        _______ ,_______ ,    XXXXXXX ,     XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX
  ),
*/
        second_layer {
          bindings = <
    &none &none &none &none  &none  &none                     &none &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
    &none &none &none &none  &none  &none                     &none &kp F4 &kp F5 &kp F6 &none   &kp F12
    &none &none &none &none  &none  &none                     &none &kp F1 &kp F2 &kp F3 &none   &none
    &none &none &none &none  &none  &none  &none       &none  &none &none  &none  &none  &none   &none
          >;
        };
        third_layer {
          bindings = <
    &none &reset      &none &none &none &none                     &kp HOME &kp PG_UP &kp UP   &kp PG_DN &kp END &none
    &none &none       &none &none &none &none                     &none    &kp LEFT  &kp DOWN &kp RIGHT &none   &none
    &none &bootloader &none &none &none &none                     &none    &none     &none    &none     &none   &none
    &none &none       &none &none &none &none  &none       &none  &none    &none     &none    &none     &none   &none
          >;
        };
        fourth_layer {
          bindings = <
    &none &none &none &none &none &none                     &kp HOME &kp PG_UP &kp UP   &kp PG_DN &kp END &none
    &none &none &none &none &none &none                     &none    &kp LEFT  &kp DOWN &kp RIGHT &none   &none
    &none &none &none &none &none &none                     &none    &none     &none    &none     &none   &none
    &none &none &none &none &none &none  &none       &none  &none    &none     &none    &none     &none   &none
          >;
        };

    };
};

