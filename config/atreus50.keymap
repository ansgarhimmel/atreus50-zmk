/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define L1 1
#define L2 2
#define L3 3  // NUMBERs, F1-12..
#define L4 4  // SPECIAL
#define L5 5  // NUMPAD
#define L6 6  // BL

#define AUML APOS
#define OUML SEMI
#define UUML LBKT
#define DE_SS MINUS
/*
#define DE_MINS
#define LT_BSPC MT(MOD_CMD, KC_BSPC)
#define LT_DEL MT(MOD_RALT, KC_DEL)
#define LT_ENT MT(MOD_RALT, KC_ENT)
#define LT_SPC MT(MOD_CMD, KC_SPC)
#define LT_HASH LT(_NAV,DE_HASH)
#define LT_DQUOT LT(_NAV,S(KC_2))
*/
/ {
    keymap {
        compatible = "zmk,keymap";
/*
 [LYR_BASE] = LAYOUT(
                      ,S(DE_HASH),S(DE_2)
     KC_HYPR ,DE_UE   ,DE_O    ,DE_E    ,DE_P    ,KC_Z    ,NUM_L   ,                          NUM_L   ,DE_F    ,DE_G    ,DE_T    ,DE_N    ,DE_L    ,KC_HYPR ,
     KC_TAB  ,DE_A    ,DE_COMM ,DE_DOT  ,DE_U    ,DE_I    ,SC_PASTE,                          TG_LYOT ,DE_D    ,DE_H    ,DE_C    ,DE_R    ,DE_S    ,DE_MINS ,
     KC_LSFT ,DE_OE   ,DE_Q    ,DE_J    ,DE_K    ,DE_X    ,SC_COPY ,SC_CUT  ,        ZOOM_IN ,ZOOM_OUT,DE_B    ,DE_M    ,DE_W    ,DE_V    ,DE_Z    ,KC_RSFT ,
     KC_LCTL ,DE_AE   ,TT(3)   ,LT_HASH ,     TT(1)   ,    LT_BSPC ,LT_DEL  ,        LT_ENT  ,KC_SPC  ,    LT(1,KC_0),   LT_DQUOT ,TT(3)   ,DE_SS   ,KC_RCTL
  ),
*/
        default_layer {
            bindings = <
    &kp ESC   &kp UUML  &kp O     &kp E    &kp P      &kp Z                                       &kp F     &kp G          &kp T  &kp N    &kp L     &none
    &kp TAB   &kp A     &kp COMMA &kp DOT  &kp U      &kp I                                       &kp D     &kp H          &kp C  &kp R    &kp S     &none
    &kp RSHFT &kp OUML  &kp Q     &kp J    &kp K      &kp X                                       &kp B     &kp M          &kp W  &kp V    &kp Y     &kp RSHFT
    &kp LCTL  &kp AUML  &none     &mo L2   &mo L1     &mt LGUI BSPC  &mt LALT DEL &mt LALT ENTER  &kp SPACE &lt L1 KP_N0   &mo L2 &none    &kp DE_SS &kp RCTL
            >;
        };

/*
  [LYR_NUMS] = LAYOUT(
     _______ ,DE_OSX_DLR,  DE_OSX_PIPE, DE_OSX_BSLS, DE_OSX_LCBR, DE_OSX_RCBR,_______ ,                  _______ ,DE_OSX_PLUS, KC_7,   KC_8,    KC_9,       XXXXXXX     ,KC_F12  ,
     _______ ,DE_OSX_AT,   DE_OSX_AMPR, DE_OSX_SLSH, DE_OSX_LPRN, DE_OSX_RPRN,_______ ,                  _______ ,DE_OSX_EQL,  KC_4,   KC_5,    KC_6,       DE_SS       ,XXXXXXX ,
     _______ ,DE_OSX_PARA ,DE_OSX_LT,   DE_OSX_GT,   DE_OSX_LBRC, DE_OSX_RBRC,_______ ,_______ ,_______ ,_______ ,DE_OSX_ASTR, KC_1,   KC_2,    KC_3,       XXXXXXX     ,KC_RSFT ,
     _______ ,_______    , _______ ,    S(KC_2) ,              _______ ,      _______ ,_______ ,_______ ,_______ ,        KC_KP_0 ,    DE_DOT , S(DE_COMM), _______     , _______
  ),
*/

        fst_layer {
          bindings = <
    &kp TAB    &kp ESC        &none          &kp ENTER  &none      &kp INS                       &none     &none     &kp RA(N7)  &kp RA(N0)  &kp C_PLAY_PAUSE  &kp C_NEXT
    &kp LCTRL  &none          &kp INS        &kp LC(S)  &kp HOME   &kp END                       &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT   &kp LS(N8)        &kp LS(N9)
    &kp LSHFT  &kp LC(Y)      &kp LC(X)      &kp LC(C)  &kp LC(V)  &tog L4                       &kp DEL   &kp BSPC  &kp RA(N8)  &kp RA(N9)  &kp RS(BSLH)      &kp C_PREV
    &kp LSHFT  &kp LC(PG_UP)  &kp LC(PG_DN)  &kp LGUI   &none      &none    &none      &kp LALT  &none     &mo L2    &mo L3      &none       &none             &kp RSHFT
          >;
        };
/*
  [_NAV] = LAYOUT(
       XXXXXXX ,XXXXXXX ,KC_F1   ,KC_F2   ,KC_F3   ,KC_F4   ,_______ ,                          _______ ,KC_HOME ,KC_PGUP ,KC_UP   ,KC_PGDN ,KC_END  ,XXXXXXX ,
     XXXXXXX ,KC_MS_L ,KC_F5   ,KC_F6   ,KC_F7   ,KC_F8   ,_______ ,                          _______ ,XXXXXXX ,KC_LEFT ,KC_DOWN ,KC_RIGHT,XXXXXXX ,XXXXXXX ,
     XXXXXXX ,XXXXXXX ,KC_F9   ,KC_F10  ,KC_F11  ,KC_F12  ,_______ ,_______ ,        _______ ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,
     XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX ,     KC_BTN1 ,    KC_BTN2 ,_______ ,        _______ ,_______ ,    XXXXXXX ,     XXXXXXX ,XXXXXXX ,XXXXXXX ,XXXXXXX
  ),
*/
        snd_layer {
          bindings = <
    &none     &reset      &none         &none      &none            &none                     &none     &none       &none         &none      &none            &none
    &none     &none       &none         &none      &none            &none                     &none     &none       &none         &none      &none            &none
    &none     &bootloader &none         &none      &none            &none                     &none     &none       &none         &none      &none            &none
    &none     &none       &none         &none      &none            &none  &none       &none  &none     &none       &none         &none      &none            &none
          >;
        };


        trd_layer {
          bindings = <
    &kp GRAVE      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                           &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp EQUAL
    &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                       &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp LS(EQUAL)
    &kp LSHFT      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                           &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11
    &kp LSHFT      &kp F12     &none       &kp LGUI    &kp RALT    &kp LCTRL   &kp LALT      &none  &none       &none       &none       &none       &none       &kp RSHFT
          >;
        }; 
    };
};

